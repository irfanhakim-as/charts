{{- $replica_count := .Values.replicaCount | default "1" | toString }}
{{- $vpbot_registry := .Values.image.vpbot.registry | default "ghcr.io" | toString }}
{{- $vpbot_repository := .Values.image.vpbot.repository | default "irfanhakim-as/quarantine-bot" | toString }}
{{- $vpbot_tag := .Values.image.vpbot.tag | default .Chart.AppVersion | toString }}
{{- $vpbot_pullPolicy := .Values.image.vpbot.pullPolicy | default "IfNotPresent" | toString | quote }}
{{- $redis_registry := .Values.image.redis.registry | default "docker.io" | toString }}
{{- $redis_repository := .Values.image.redis.repository | default "redis" | toString }}
{{- $redis_tag := .Values.image.redis.tag | default "alpine" | toString }}
{{- $redis_pullPolicy := .Values.image.redis.pullPolicy | default "IfNotPresent" | toString | quote }}
{{- $ngrok_registry := .Values.image.ngrok.registry | default "docker.io" | toString }}
{{- $ngrok_repository := .Values.image.ngrok.repository | default "wernight/ngrok" | toString }}
{{- $ngrok_tag := .Values.image.ngrok.tag | default "latest" | toString }}
{{- $ngrok_pullPolicy := .Values.image.ngrok.pullPolicy | default "IfNotPresent" | toString | quote }}
{{- $cloudflared := .Values.vpbot.cloudflared.enabled }}
{{- $ngrok := .Values.vpbot.ngrok.enabled }}
{{- $persistence := .Values.vpbot.persistence.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-vpbot
  labels:
    {{- include "vpbot.labels" . | nindent 4 }}
spec:
  replicas: {{ int $replica_count }}
  selector:
    matchLabels:
      {{- include "vpbot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vpbot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: vpbot
          image: {{ printf "%s/%s:%s" $vpbot_registry $vpbot_repository $vpbot_tag | quote }}
          imagePullPolicy: {{ $vpbot_pullPolicy }}
          ports:
            - name: vpbot
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources.vpbot | nindent 12 }}
          {{- if $cloudflared }}
          env:
            - name: ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-vpbot-cm
                  key: DOMAIN
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-vpbot-cm
            - secretRef:
                name: {{ .Release.Name }}-vpbot-secret
            - secretRef:
                name: {{ .Release.Name }}-vpbot-postgres-secret
          volumeMounts:
            - name: {{ .Release.Name }}-vpbot-site-config
              mountPath: /etc/apache2/sites-available/000-default.conf
              subPath: site-config.conf
              readOnly: true
            {{- if $persistence }}
            - name: {{ .Release.Name }}-vpbot-static
              mountPath: /static
            - name: {{ .Release.Name }}-vpbot-logs
              mountPath: /quarantine-bot/logs
            - name: {{ .Release.Name }}-vpbot-migrations
              mountPath: /quarantine-bot/quarantine_bot/migrations
            {{- end }}
        - name: redis
          image: {{ printf "%s/%s:%s" $redis_registry $redis_repository $redis_tag | quote }}
          imagePullPolicy: {{ $redis_pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            {{- toYaml .Values.resources.redis | nindent 12 }}
        {{- if $ngrok }}
        - name: ngrok
          image: {{ printf "%s/%s:%s" $ngrok_registry $ngrok_repository $ngrok_tag | quote }}
          imagePullPolicy: {{ $ngrok_pullPolicy }}
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                ngrok authtoken $(NGROK_AUTH) &&
                ngrok http 80 --bind-tls=true
          ports:
            - name: ngrok
              containerPort: 4040
              protocol: TCP
          env:
            - name: NGROK_AUTH
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-secret
                  key: NGROK_AUTH_TOKEN
        {{- end }}
      volumes:
        - name: {{ .Release.Name }}-vpbot-site-config
          configMap:
            name: {{ .Release.Name }}-vpbot-site-config
        {{- if $persistence }}
        - name: {{ .Release.Name }}-vpbot-static
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-vpbot-static-pvc
        - name: {{ .Release.Name }}-vpbot-logs
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-vpbot-logs-pvc
        - name: {{ .Release.Name }}-vpbot-migrations
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-vpbot-migrations-pvc
        {{- end }}
