apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-vpbot
  labels:
    {{- include "vpbot.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "vpbot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vpbot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: vpbot
          image: "{{ .Values.image.vpbot.registry }}/{{ .Values.image.vpbot.repository }}:{{ .Values.image.vpbot.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.vpbot.pullPolicy }}
          ports:
            - name: vpbot
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-secret
                  key: SECRET_KEY
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-vpbot-cm
                  key: DEBUG
            - name: NGROK
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-vpbot-cm
                  key: NGROK
            - name: DJANGO_WEBHOOK_URI
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-vpbot-cm
                  key: DJANGO_WEBHOOK_URI
            - name: LOG_SIZE_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-vpbot-cm
                  key: LOG_SIZE_LIMIT
            - name: APP_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-vpbot-cm
                  key: APP_VERSION
            - name: TELEGRAM_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-secret
                  key: TELEGRAM_BOT_TOKEN
            - name: TELEGRAM_ADMIN_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-secret
                  key: TELEGRAM_ADMIN_ID
            - name: TELEGRAM_DEVEL_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-secret
                  key: TELEGRAM_DEVEL_ID
            - name: DEFAULT_USER_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-secret
                  key: DEFAULT_USER_PASS
            - name: NGROK_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-secret
                  key: NGROK_AUTH_TOKEN
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-vpbot-postgres-cm
                  key: DB_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-vpbot-postgres-cm
                  key: DB_NAME
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-postgres-secret
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-postgres-secret
                  key: DB_PASS
          volumeMounts:
            - name: {{ .Release.Name }}-vpbot-site-config
              mountPath: /etc/apache2/sites-available/000-default.conf
              subPath: site-config.conf
              readOnly: true
            - name: {{ .Release.Name }}-vpbot-static
              mountPath: /static
            - name: {{ .Release.Name }}-vpbot-logs
              mountPath: /quarantine-bot/logs
            - name: {{ .Release.Name }}-vpbot-migrations
              mountPath: /quarantine-bot/quarantine_bot/migrations
        - name: ngrok
          image: "{{ .Values.image.ngrok.registry }}/{{ .Values.image.ngrok.repository }}:{{ .Values.image.ngrok.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.ngrok.pullPolicy }}
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                ngrok authtoken $(NGROK_AUTH) &&
                ngrok http 80 --bind-tls=true
          ports:
            - name: ngrok
              containerPort: 4040
              protocol: TCP
          env:
            - name: NGROK_AUTH
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-vpbot-secret
                  key: NGROK_AUTH_TOKEN
      volumes:
        - name: {{ .Release.Name }}-vpbot-site-config
          configMap:
            name: {{ .Release.Name }}-vpbot-site-config
            items:
              - key: site-config.conf
                path: site-config.conf
        - name: {{ .Release.Name }}-vpbot-static
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-vpbot-static-pvc
        - name: {{ .Release.Name }}-vpbot-logs
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-vpbot-logs-pvc
        - name: {{ .Release.Name }}-vpbot-migrations
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-vpbot-migrations-pvc
