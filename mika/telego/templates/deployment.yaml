apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-telego
  labels:
    {{- include "telego.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "telego.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
        "helm.sh/hook-weight": "1"
      {{- end }}
      labels:
        {{- include "telego.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: telego
          image: "{{ .Values.image.telego.registry }}/{{ .Values.image.telego.repository }}:{{ .Values.image.telego.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.telego.pullPolicy }}
          ports:
            - name: telego
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-telego-cm
                  key: APP_NAME
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-database-secret
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-database-secret
                  key: DB_PORT
            - name: DB_TYPE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-database-secret
                  key: DB_TYPE
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-database-secret
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-database-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-database-secret
                  key: DB_PASS
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-telego-cm
                  key: DEBUG
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-secret
                  key: SECRET_KEY
            - name: TELEGRAM_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-secret
                  key: TELEGRAM_BOT_TOKEN
            {{- if .Values.telego.ngrok.enabled }}
            - name: NGROK_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-secret
                  key: NGROK_AUTH_TOKEN
            {{- end }}
            - name: DJANGO_WEBHOOK_URI
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-telego-cm
                  key: DJANGO_WEBHOOK_URI
            - name: NGROK
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-telego-cm
                  key: NGROK
            {{- if .Values.telego.cloudflared.enabled }}
            - name: ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-telego-cm
                  key: DOMAIN
            {{- end }}
          volumeMounts:
            - name: {{ .Release.Name }}-telego-site-config
              mountPath: /etc/apache2/sites-available/000-default.conf
              subPath: site-config.conf
              readOnly: true
            {{- if .Values.telego.commands }}
            - name: {{ .Release.Name }}-telego-commands-cm
              mountPath: /telego/telego/commands.py
              subPath: commands.py
              readOnly: true
            {{- end }}
            {{- if .Values.telego.messages }}
            - name: {{ .Release.Name }}-telego-messages-cm
              mountPath: /telego/telego/messages.py
              subPath: messages.py
              readOnly: true
            {{- end }}
            - name: {{ .Release.Name }}-telego-logs
              mountPath: /telego/logs
        {{- if .Values.telego.ngrok.enabled }}
        - name: ngrok
          image: "{{ .Values.image.ngrok.registry }}/{{ .Values.image.ngrok.repository }}:{{ .Values.image.ngrok.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.ngrok.pullPolicy }}
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                ngrok authtoken $(NGROK_AUTH) &&
                ngrok http 80 --bind-tls=true
          ports:
            - name: ngrok
              containerPort: 4040
              protocol: TCP
          env:
            - name: NGROK_AUTH
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-telego-secret
                  key: NGROK_AUTH_TOKEN
        {{- end }}
      volumes:
        - name: {{ .Release.Name }}-telego-site-config
          configMap:
            name: {{ .Release.Name }}-telego-site-config
        {{- if .Values.telego.commands }}
        - name: {{ .Release.Name }}-telego-commands-cm
          configMap:
            name: {{ .Release.Name }}-telego-commands-cm
        {{- end }}
        {{- if .Values.telego.messages }}
        - name: {{ .Release.Name }}-telego-messages-cm
          configMap:
            name: {{ .Release.Name }}-telego-messages-cm
        {{- end }}
        - name: {{ .Release.Name }}-telego-logs
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-telego-logs-pvc
