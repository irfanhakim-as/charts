# Default values for waktusolat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# The desired number of running replicas for WaktuSolat.
# Default: "1"
replicaCount: ""

# Container images used for WaktuSolat.
image:
  # WaktuSolat container image configurations.
  # Source: https://github.com/irfanhakim-as?tab=packages&repo_name=waktusolat
  waktusolat:
    # The registry where the WaktuSolat container image is hosted.
    # Default: "ghcr.io"
    registry: ""
    # The name of the repository that contains the WaktuSolat container image used.
    # Default: "irfanhakim-as/waktusolat"
    repository: ""
    # The tag that specifies the version of the WaktuSolat container image used.
    # Default: Chart appVersion
    tag: ""
    # The policy that determines when Kubernetes should pull the WaktuSolat container image.
    # Default: "IfNotPresent"
    pullPolicy: ""
  # Redis container image configurations.
  # Source: https://hub.docker.com/_/redis
  redis:
    # The registry where the Redis container image is hosted.
    # Default: "docker.io"
    registry: ""
    # The name of the repository that contains the Redis container image used.
    # Default: "redis"
    repository: ""
    # The tag that specifies the version of the Redis container image used.
    # Default: "alpine"
    tag: ""
    # The policy that determines when Kubernetes should pull the Redis container image.
    # Default: "IfNotPresent"
    pullPolicy: ""

# Credentials used to securely authenticate and authorise the pulling of container images from private registries.
# Example:
# imagePullSecrets:
#   - name: "ghcr-token-secret"
imagePullSecrets: []

# WaktuSolat configurations.
waktusolat:
  # Specifies whether WaktuSolat should run in debug mode.
  # Default: false
  # Example:
  # debug: true
  debug: false
  # The ingress domain name that hosts the WaktuSolat server.
  # Default: "localhost"
  # Example:
  # domain: "waktusolat.example.com"
  domain: ""
  # The limit number of posts to be scheduled for posting per run.
  # Default: "0" (Unlimited)
  # Example:
  # post_limit: "5"
  post_limit: ""
  # Specifies whether to retry posting if the post fails to be sent.
  # Default: "false"
  # Example:
  # retry_post: "true"
  retry_post: ""
  # A 50-character secret key used for secure session management and cryptographic operations within the WaktuSolat service.
  # Example:
  # secret: "6&p4%t)-$8a14fmfh92py8j55+us51r6%e52dzy&=a3-6yd4#e"
  secret: ""
  # The email address displayed by Apache for server administration contact.
  # Default: "admin@example.com"
  # Example:
  # serverAdmin: "foo@example.com"
  serverAdmin: ""
  # The default visibility of posts made by the WaktuSolat service.
  # Default: "public"
  # Example:
  # visibility: "unlisted"
  visibility: ""
  # A list of hosts that are allowed to access the WaktuSolat service in addition to the default.
  # Default: "127.0.0.1,localhost,$serviceName,$(POD_IP),$domain"
  # Example:
  # allowedHosts:
  #   - "192.168.0.16"
  #   - "192.168.0.17"
  allowedHosts: []
  # The code of locations WaktuSolat should fetch and update prayer times for.
  # Default: "wlp-0"
  # Example:
  # location:
  #   - "swk-33"
  #   - "wlp-1"
  location: []
  # Account configurations.
  # Items: `.api`, `.id`, `.host`, `.token`, `.bot`, `.discoverable`, `.enabled`, `.display_name`, `.fields`, `.locked`, `.note`
  # Example:
  # account:
  #   # API endpoint or URL for the server instance of the WaktuSolat bot.
  #   # Example:
  #   # api: "https://botsin.space"
  #   - api: ""
  #   # The username or user account for the server instance of the WaktuSolat bot.
  #   # Example:
  #   # id: "waktusolat"
  #     id: ""
  #   # The underlying host service of the server instance.
  #   # Default: "mastodon"
  #   # Example:
  #   # host: "bluesky"
  #     host: ""
  #   # The application access token required to authenticate the WaktuSolat service with the server instance's API.
  #   # Example:
  #   # token: "rinoSZiIvRHLw6PL1QCSia+8liGDau0MZ336JAnL0IQ"
  #     token: ""
  #   # Specifies whether the WaktuSolat bot should be marked as a bot.
  #   # Note: Bluesky does not currently support this field.
  #   # Default: "true"
  #   # Example:
  #   # bot: "false"
  #     bot: ""
  #   # Specifies whether the WaktuSolat bot should appear in the user directory.
  #   # Note: Bluesky does not currently support this field.
  #   # Default: "true"
  #   # Example:
  #   # discoverable: "false"
  #     discoverable: ""
  #   # Specifies whether the WaktuSolat bot should be active.
  #   # Default: "true"
  #   # Example:
  #   # enabled: "false"
  #     enabled: ""
  #   # The display name of the WaktuSolat bot.
  #   # Note: Bluesky does not currently support this field.
  #   # Default: "null"
  #   # Example:
  #   # display_name: "WaktuSolat"
  #     display_name: ""
  #   # A list of up to four name-value pairs information to be displayed on the WaktuSolat bot's profile.
  #   # Note: Bluesky does not officially support this field.
  #   # Example:
  #   # fields:
  #   #   - name: "Website 1"
  #   #     value: "https://domain1.example.org"
  #   #   - name: "Website 2"
  #   #     value: "https://domain2.example.org"
  #     fields: []
  #   # Specifies whether the WaktuSolat bot needs to manually approve follow requests.
  #   # Note: Bluesky does not currently support this field.
  #   # Default: "false"
  #   # Example:
  #   # locked: "true"
  #     locked: ""
  #   # The bio of the WaktuSolat bot.
  #   # Note: Bluesky does not currently support this field.
  #   # Default: "null"
  #   # Example:
  #   # note: "This is the bio of the WaktuSolat bot."
  #     note: ""
  account: []
  # WaktuSolat feed configurations.
  # Items: `.endpoint`, `.id`, `.enabled`
  # Example:
  # feed:
  #   # The URL of the prayer time API feed to be tracked by WaktuSolat.
  #   # Example:
  #   # endpoint: "https://mpt.i906.my/api/prayer/%s"
  #   - endpoint: ""
  #   # The unique identifier of the API feed entry - must be an ISO 3166 Alpha-2 country code in uppercase.
  #   # Example:
  #   # id: "MY"
  #     id: ""
  #   # Specifies whether the prayer time API feed entry should be actively processed.
  #   # Default: "true"
  #   # Example:
  #   # enabled: "false"
  #     enabled: ""
  feed: []

# Scheduler configurations.
scheduler:
  # Specifies whether APScheduler should be used by WaktuSolat as the task scheduler.
  # Example:
  # apscheduler: false
  apscheduler: true
  # Specifies whether Celery should be used by WaktuSolat as the task scheduler.
  # Example:
  # celery: true
  celery: false
  # The timezone for the task scheduler used by WaktuSolat to schedule time-dependent operations.
  # Default: "Etc/UTC"
  # Example:
  # timezone: "Asia/Kuala_Lumpur"
  timezone: ""
  # The schedule for the task scheduler used by WaktuSolat.
  # Note: The APScheduler scheduler supports the `hour`, `minute`, and `second` fields simultaneously.
  # The Celery scheduler only supports a combination of the `hour` and `minute` fields, or the `second` field alone.
  schedule:
    # The schedule for cleaning up the database.
    clean_db:
      # The hours at which the task scheduler cleans up the database.
      # Default: "0"
      # Example:
      # hour: "1"
      hour: ""
      # The minutes at which the task scheduler cleans up the database.
      # Default: "0"
      # Example:
      # minute: "30"
      minute: ""
      # The seconds at which the task scheduler cleans up the database.
      # Default: "0" (APScheduler)
      # Example:
      # second: "30"
      second: ""
    # The schedule for the daily prayer time post.
    notify_solat_schedule:
      # The hours at which the task scheduler schedules the daily prayer time post.
      # Default: "5"
      # Example:
      # hour: "4"
      hour: ""
      # The minutes at which the task scheduler schedules the daily prayer time post.
      # Default: "0"
      # Example:
      # minute: "15"
      minute: ""
      # The seconds at which the task scheduler schedules the daily prayer time post.
      # Default: "0" (APScheduler)
      # Example:
      # second: "30"
      second: ""
    # The schedule for the daily prayer time notifications.
    notify_solat_times:
      # The hours at which the task scheduler schedules the daily prayer time notifications.
      # Default: "*"
      # Example:
      # hour: "6,13,16,19,20"
      hour: ""
      # The minutes at which the task scheduler schedules the daily prayer time notifications.
      # Default: "*/1"
      # Example:
      # minute: "*"
      minute: ""
      # The seconds at which the task scheduler schedules the daily prayer time notifications.
      # Default: "0" (APScheduler)
      # Example:
      # second: "30"
      second: ""
    # The schedule for posting scheduled posts.
    post_scheduler:
      # The hours at which the task scheduler posts scheduled posts.
      # Default: "*"
      # Example:
      # hour: "4-20"
      hour: ""
      # The minutes at which the task scheduler posts scheduled posts.
      # Default: "*"
      # Example:
      # minute: "*/30"
      minute: ""
      # The seconds at which the task scheduler posts scheduled posts.
      # Default: "*/1" (APScheduler)
      # Example:
      # second: "30"
      second: ""

# Database configurations.
db:
  # The database engine or backend being used by WaktuSolat.
  # Default: "postgresql"
  # Example:
  # type: "mysql"
  type: ""
  # The hostname or IP address of the WaktuSolat database server.
  # Example:
  # host: "waktusolat.default.svc.cluster.local"
  host: ""
  # The port number the WaktuSolat database server is listening for connections.
  # Default: "5432"
  # Example:
  # port: "3306"
  port: ""
  # The name of the database being used by WaktuSolat.
  # Example:
  # name: "waktusolat"
  name: ""
  # The username or user account for accessing the WaktuSolat database.
  # Example:
  # user: "root"
  user: ""
  # The password associated with the WaktuSolat database user.
  # Example:
  # password: "password"
  password: ""

# Ingress configurations.
ingress:
  # Specifies whether Ingress should be enabled for hosting WaktuSolat services.
  # Example:
  # enabled: true
  enabled: false
  # The name of the cluster issuer for Ingress.
  # Default: "letsencrypt-dns-prod"
  # Example:
  # clusterIssuer: "letsencrypt-http-prod"
  clusterIssuer: ""
  # Specifies whether the WWW subdomain should be enabled.
  # Example:
  # www: true
  www: false
  # Additional configuration annotations to be added to the Ingress resource.
  # Items: `.prefix`, `.name`, `.value`
  # Example:
  # customAnnotations:
  #   # The prefix of the annotation.
  #   # Default: "nginx.ingress.kubernetes.io"
  #   # Example:
  #   # prefix: "nginx.org"
  #   - prefix: ""
  #   # The name of the annotation.
  #   # Example:
  #   # name: "proxy-connect-timeout"
  #     name: ""
  #   # The value of the annotation.
  #   # Example:
  #   # value: "120"
  #     value: ""
  customAnnotations: []

# Service configurations.
service:
  # The type of service used to expose WaktuSolat services.
  # Default: "ClusterIP"
  # Example:
  # type: "NodePort"
  type: ""
  # WaktuSolat service port configurations.
  waktusolat:
    # The optional node port to expose for WaktuSolat when the service type is NodePort.
    # Example:
    # nodePort: "30000"
    nodePort: ""
    # The WaktuSolat port on which the WaktuSolat server should listen for connections.
    # Default: "80"
    # Example:
    # port: "8080"
    port: ""
  # Redis service port configurations.
  redis:
    # The optional node port to expose for Redis when the service type is NodePort.
    # Example:
    # nodePort: "32000"
    nodePort: ""
    # The Redis port on which the WaktuSolat server should listen for connections.
    # Default: "6379"
    # Example:
    # port: "8443"
    port: ""

# Storage configurations.
storage:
  # Log storage configurations.
  log:
    # Specifies whether persistent storage should be provisioned for log storage.
    # Example:
    # enabled: true
    enabled: false
    # The access mode defining how the log storage can be mounted.
    # Default: "ReadWriteMany"
    # Example:
    # accessMode: "ReadWriteOnce"
    accessMode: ""
    # The path where the log storage should be mounted on the container.
    # Default: "/var/log/django"
    # Example:
    # mountPath: "/log"
    mountPath: ""
    # The subpath within the log storage to mount to the container. Leave empty if not required.
    # Example:
    # subPath: "Log"
    subPath: ""
    # The default amount of persistent storage allocated for the log storage.
    # Default: "50Mi"
    # Example:
    # storage: "10Gi"
    storage: ""
    # The storage class name used for dynamically provisioning a persistent volume for the log storage.
    # Default: "longhorn"
    # Example:
    # storageClassName: "smb"
    storageClassName: ""

# Health probes configurations.
probes:
  # WaktuSolat container health probes.
  waktusolat:
    # Startup probe to check if the WaktuSolat container has started successfully.
    startup:
      # Specifies whether to enable the startup probe for the WaktuSolat container.
      # Example:
      # enabled: true
      enabled: false
      # The specification defining how the startup probe checks the WaktuSolat container health.
      # Example:
      # spec:
      #   httpGet:
      #     path: /healthz
      #     port: waktusolat
      #   initialDelaySeconds: 30
      #   periodSeconds: 60
      #   timeoutSeconds: 15
      #   failureThreshold: 2
      #   successThreshold: 1
      spec: {}
    # Liveness probe to check if the WaktuSolat container is running properly.
    liveness:
      # Specifies whether to enable the liveness probe for the WaktuSolat container.
      # Example:
      # enabled: true
      enabled: false
      # The specification defining how the liveness probe checks the WaktuSolat container health.
      # Note: A default probe configuration will be used if not set for the container.
      # Example:
      # spec:
      #   httpGet:
      #     path: /healthz
      #     port: waktusolat
      #   initialDelaySeconds: 30
      #   periodSeconds: 60
      #   timeoutSeconds: 15
      #   failureThreshold: 2
      #   successThreshold: 1
      spec: {}
    # Readiness probe to check if the WaktuSolat container is ready to serve requests.
    readiness:
      # Specifies whether to enable the readiness probe for the WaktuSolat container.
      # Example:
      # enabled: true
      enabled: false
      # The specification defining how the readiness probe checks the WaktuSolat container health.
      # Example:
      # spec:
      #   httpGet:
      #     path: /healthz
      #     port: waktusolat
      #   initialDelaySeconds: 30
      #   periodSeconds: 60
      #   timeoutSeconds: 15
      #   failureThreshold: 2
      #   successThreshold: 1
      spec: {}
  # Scheduler container health probes.
  scheduler:
    # Startup probe to check if the Scheduler container has started successfully.
    startup:
      # Specifies whether to enable the startup probe for the Scheduler container.
      # Example:
      # enabled: true
      enabled: false
      # The specification defining how the startup probe checks the Scheduler container health.
      # Example:
      # spec:
      #   httpGet:
      #     path: /healthz
      #     port: scheduler
      #   initialDelaySeconds: 30
      #   periodSeconds: 60
      #   timeoutSeconds: 15
      #   failureThreshold: 2
      #   successThreshold: 1
      spec: {}
    # Liveness probe to check if the Scheduler container is running properly.
    liveness:
      # Specifies whether to enable the liveness probe for the Scheduler container.
      # Example:
      # enabled: true
      enabled: false
      # The specification defining how the liveness probe checks the Scheduler container health.
      # Note: A default probe configuration will be used if not set for the APScheduler container.
      # Example:
      # spec:
      #   httpGet:
      #     path: /healthz
      #     port: scheduler
      #   initialDelaySeconds: 30
      #   periodSeconds: 60
      #   timeoutSeconds: 15
      #   failureThreshold: 2
      #   successThreshold: 1
      spec: {}
    # Readiness probe to check if the Scheduler container is ready to serve requests.
    readiness:
      # Specifies whether to enable the readiness probe for the Scheduler container.
      # Example:
      # enabled: true
      enabled: false
      # The specification defining how the readiness probe checks the Scheduler container health.
      # Example:
      # spec:
      #   httpGet:
      #     path: /healthz
      #     port: scheduler
      #   initialDelaySeconds: 30
      #   periodSeconds: 60
      #   timeoutSeconds: 15
      #   failureThreshold: 2
      #   successThreshold: 1
      spec: {}

# Resource requirements and limits for WaktuSolat containers.
resources:
  # WaktuSolat container resources.
  # Example:
  # waktusolat:
  #   # The minimum amount of resources required by WaktuSolat to run.
  #   requests:
  #     # The minimum amount of CPU resources required by WaktuSolat.
  #     # Note: This is the recommended default when using APScheduler as the scheduler. Allocate "500m" or more if using Celery as the scheduler.
  #     # Example:
  #     # cpu: "10m"
  #     cpu: "350m"
  #     # The minimum amount of memory required by WaktuSolat.
  #     # Note: This is the recommended default when using APScheduler as the scheduler. Allocate "850Mi" or more if using Celery as the scheduler.
  #     # Example:
  #     # memory: "10Mi"
  #     memory: "300Mi"
  #   # The maximum amount of resources allowed for WaktuSolat.
  #   limits:
  #     # The maximum amount of CPU resources allowed for WaktuSolat.
  #     # Note: This is the recommended default when using APScheduler as the scheduler. Allocate "1" or more if using Celery as the scheduler.
  #     # Example:
  #     # cpu: "250m"
  #     cpu: "450m"
  #     # The maximum amount of memory allowed for WaktuSolat.
  #     # Note: This is the recommended default when using APScheduler as the scheduler. Allocate "1024Mi" or more if using Celery as the scheduler.
  #     # Example:
  #     # memory: "250Mi"
  #     memory: "350Mi"
  waktusolat: {}
  # Scheduler container resources.
  # Example:
  # scheduler:
  #   # The minimum amount of resources required by Scheduler to run.
  #   requests:
  #     # The minimum amount of CPU resources required by Scheduler.
  #     # Note: This is the recommended default when using APScheduler as the scheduler. Allocate "10m" or more if using Celery as the scheduler.
  #     # Example:
  #     # cpu: "10m"
  #     cpu: "200m"
  #     # The minimum amount of memory required by Scheduler.
  #     # Note: This is the recommended default when using APScheduler as the scheduler. Allocate "50Mi" or more if using Celery as the scheduler.
  #     # Example:
  #     # memory: "10Mi"
  #     memory: "300Mi"
  #   # The maximum amount of resources allowed for Scheduler.
  #   limits:
  #     # The maximum amount of CPU resources allowed for Scheduler.
  #     # Note: This is the recommended default when using APScheduler as the scheduler. Allocate "20m" or more if using Celery as the scheduler.
  #     # Example:
  #     # cpu: "250m"
  #     cpu: "300m"
  #     # The maximum amount of memory allowed for Scheduler.
  #     # Note: This is the recommended default when using APScheduler as the scheduler. Allocate "100Mi" or more if using Celery as the scheduler.
  #     # Example:
  #     # memory: "250Mi"
  #     memory: "350Mi"
  scheduler: {}
