# Default values for grocy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# The desired number of running replicas for Grocy.
# Default: "1"
replicaCount: ""

# Container images used for Grocy.
image:
  # Backend container image configurations.
  # Source: https://hub.docker.com/r/grocy/backend
  backend:
    # The registry where the Backend container image is hosted.
    # Default: "docker.io"
    registry: ""
    # The name of the repository that contains the Backend container image used.
    # Default: "grocy/backend"
    repository: ""
    # The tag that specifies the version of the Backend container image used.
    # Default: Chart appVersion
    tag: ""
    # The policy that determines when Kubernetes should pull the Backend container image.
    # Default: "IfNotPresent"
    pullPolicy: ""
  # Frontend container image configurations.
  # Source: https://hub.docker.com/r/grocy/frontend
  frontend:
    # The registry where the Frontend container image is hosted.
    # Default: "docker.io"
    registry: ""
    # The name of the repository that contains the Frontend container image used.
    # Default: "grocy/frontend"
    repository: ""
    # The tag that specifies the version of the Frontend container image used.
    # Default: Chart appVersion
    tag: ""
    # The policy that determines when Kubernetes should pull the Frontend container image.
    # Default: "IfNotPresent"
    pullPolicy: ""

# Credentials used to securely authenticate and authorise the pulling of container images from private registries.
# Example:
# imagePullSecrets:
#   - name: "ghcr-token-secret"
imagePullSecrets: []

# Grocy configurations.
grocy:
  # The mode to deploy grocy in which determines whether to enable user authentication.
  # Default: "production"
  # Example:
  # mode: "demo"
  mode: ""
  # The localisation of the Grocy application.
  # Default: "en_GB"
  # Example:
  # culture: "en"
  culture: ""
  # The currency used to format all monetary values in Grocy.
  # Default: "MYR"
  # Example:
  # currency: "USD"
  currency: ""
  # The preferred unit for displaying energy values in Grocy.
  # Default: "kcal"
  # Example:
  # energy: "kJ"
  energy: ""
  # Grocy PHP configurations.
  php:
    # Specifies the maximum size of an individual file that can be uploaded through PHP.
    # Default: "50M"
    # Example:
    # upload_limit: "100M"
    upload_limit: ""
    # Sets the maximum number of files that can be uploaded simultaneously through PHP.
    # Default: "200"
    # Example:
    # file_limit: "100"
    file_limit: ""
    # Defines the maximum size of the entire HTTP POST request that PHP can handle.
    # Default: "100M"
    # Example:
    # post_limit: "200M"
    post_limit: ""
    # Determines the maximum amount of memory that PHP can allocate for executing scripts.
    # Default: "512M"
    # Example:
    # memory_limit: "256M"
    memory_limit: ""
  # Grocy data configurations.
  data:
    # The amount of persistent storage allocated for the Grocy instance.
    # Default: "500Mi"
    # Example:
    # storage: "1Gi"
    storage: ""
    # The storage class name used for dynamically provisioning a persistent volume for the Grocy storage.
    # Default: "longhorn"
    # Example:
    # storageClassName: "longhorn"
    storageClassName: ""

# Resource requirements and limits for Grocy containers.
resources:
  # Backend container resources.
  backend:
    # The minimum amount of resources required by the backend to run.
    requests:
      # The minimum amount of CPU resources required by the backend.
      # Example:
      # cpu: "10m"
      cpu: "50m"
      # The minimum amount of memory required by the backend.
      # Example:
      # memory: "10Mi"
      memory: "50Mi"
    # The maximum amount of resources allowed for the backend.
    limits:
      # The maximum amount of CPU resources allowed for the backend.
      # Example:
      # cpu: "250m"
      cpu: "100m"
      # The maximum amount of memory allowed for the backend.
      # Example:
      # memory: "250Mi"
      memory: "100Mi"
  # Frontend container resources.
  frontend:
    # The minimum amount of resources required by the frontend to run.
    requests:
      # The minimum amount of CPU resources required by the frontend.
      # Example:
      # cpu: "10m"
      cpu: "10m"
      # The minimum amount of memory required by the frontend.
      # Example:
      # memory: "10Mi"
      memory: "10Mi"
    # The maximum amount of resources allowed for the frontend.
    limits:
      # The maximum amount of CPU resources allowed for the frontend.
      # Example:
      # cpu: "250m"
      cpu: "100m"
      # The maximum amount of memory allowed for the frontend.
      # Example:
      # memory: "250Mi"
      memory: "50Mi"
