{{- $dataPersistence := .Values.storage.data.enabled }}
{{- $backend_registry := .Values.image.backend.registry | default "docker.io" | toString }}
{{- $backend_repository := .Values.image.backend.repository | default "grocy/backend" | toString }}
{{- $backend_tag := .Values.image.backend.tag | default .Chart.AppVersion | toString }}
{{- $backend_pullPolicy := .Values.image.backend.pullPolicy | default "IfNotPresent" | toString | quote }}
{{- $frontend_registry := .Values.image.frontend.registry | default "docker.io" | toString }}
{{- $frontend_repository := .Values.image.frontend.repository | default "grocy/frontend" | toString }}
{{- $frontend_tag := .Values.image.frontend.tag | default .Chart.AppVersion | toString }}
{{- $frontend_pullPolicy := .Values.image.frontend.pullPolicy | default "IfNotPresent" | toString | quote }}
{{- $init_registry := .Values.image.init.registry | default "docker.io" | toString }}
{{- $init_repository := .Values.image.init.repository | default "busybox" | toString }}
{{- $init_tag := .Values.image.init.tag | default "1.36.1" | toString }}
{{- $init_pullPolicy := .Values.image.init.pullPolicy | default "IfNotPresent" | toString | quote }}
{{- $replica_count := .Values.replicaCount | default "1" | toString }}
{{- $dataMountPath := .Values.storage.data.mountPath | default "/var/www/data" | toString }}
{{- $dataSubPath := .Values.storage.data.subPath | toString }}
{{- $initScript := .Values.grocy.initScript | toString }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grocy
  labels:
    {{- include "grocy.labels" . | nindent 4 }}
spec:
  replicas: {{ int $replica_count }}
  selector:
    matchLabels:
      {{- include "grocy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "grocy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or $dataPersistence $initScript }}
      {{- $initDataMountPath := printf "/mnt/%s" ($dataMountPath | trimPrefix "/") | toString }}
      initContainers:
        - name: init
          image: {{ printf "%s/%s:%s" $init_registry $init_repository $init_tag | quote }}
          imagePullPolicy: {{ $init_pullPolicy }}
          command: ["/bin/sh"]
          args:
            - -c
            - >-
            {{- if $initScript }}
              {{- $initScript | nindent 14 }}
            {{- else }}
              if [ -z "$(ls -A {{ $initDataMountPath }} | grep -v 'lost+found')" ]; then
                echo "Initialising {{ $initDataMountPath }}"
                cp -Ra /var/www/data/. {{ $initDataMountPath }}
                chown -R www-data: {{ $initDataMountPath }}
                find {{ $initDataMountPath }} -type d -exec chmod 755 {} \;
                find {{ $initDataMountPath }} -type f -exec chmod 644 {} \;
              else
                echo "Skipping initialisation as {{ $initDataMountPath }} is not empty"
              fi
            {{- end }}
          {{- if or $dataPersistence }}
          volumeMounts:
            {{- if $dataPersistence }}
            - name: {{ .Release.Name }}-grocy-data
              mountPath: {{ $initDataMountPath | quote }}
              {{- if $dataSubPath }}
              subPath: {{ $dataSubPath | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
          securityContext:
            runAsUser: 0
      {{- end }}
      containers:
        - name: backend
          image: {{ printf "%s/%s:%s" $backend_registry $backend_repository $backend_tag | quote }}
          imagePullPolicy: {{ $backend_pullPolicy }}
          ports:
            - name: backend
              containerPort: 9000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources.backend | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-grocy-cm
          volumeMounts:
            {{- if $dataPersistence }}
            - name: {{ .Release.Name }}-grocy-data
              mountPath: {{ $dataMountPath | quote }}
              {{- if $dataSubPath }}
              subPath: {{ $dataSubPath | quote }}
              {{- end }}
            {{- end }}
        - name: frontend
          image: {{ printf "%s/%s:%s" $frontend_registry $frontend_repository $frontend_tag | quote }}
          imagePullPolicy: {{ $frontend_pullPolicy }}
          ports:
            - name: frontend
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources.frontend | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-grocy-cm
          volumeMounts:
            - name: {{ .Release.Name }}-grocy-nginx-config
              mountPath: /etc/nginx/common.conf
              subPath: common.conf
      volumes:
        - name: {{ .Release.Name }}-grocy-nginx-config
          configMap:
            name: {{ .Release.Name }}-grocy-nginx-config
        {{- if $dataPersistence }}
        - name: {{ .Release.Name }}-grocy-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-grocy-data-pvc
        {{- end }}
      securityContext:
        fsGroup: 82
