{{- $postgres_registry := .Values.image.postgres.registry | default "docker.io" | toString }}
{{- $postgres_repository := .Values.image.postgres.repository | default "postgres" | toString }}
{{- $postgres_tag := .Values.image.postgres.tag | default .Chart.AppVersion | toString }}
{{- $postgres_pullPolicy := .Values.image.postgres.pullPolicy | default "IfNotPresent" | toString | quote }}
{{- $replica_count := .Values.replicaCount | default "1" | toString }}
{{- $registry := .Values.image.registry | default "docker.io" | toString }}
{{- $repository := .Values.image.repository | default "postgres" | toString }}
{{- $tag := .Values.image.tag | default .Chart.AppVersion | toString }}
{{- $pullPolicy := .Values.image.pullPolicy | default "IfNotPresent" | toString | quote }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  replicas: {{ int $replica_count }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: {{ printf "%s/%s:%s" $postgres_registry $postgres_repository $postgres_tag | quote }}
          imagePullPolicy: {{ $postgres_pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          resources:
            {{- toYaml .Values.resources.postgres | nindent 12 }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-postgres-secret
          {{- if or $dataPersistence }}
          volumeMounts:
            - name: {{ .Release.Name }}-postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: {{ .Release.Name }}-postgres-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgres-data-pvc
